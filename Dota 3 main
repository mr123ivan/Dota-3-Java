package com.mycompany.dota3;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class Dota3 {
    public static void main(String[] args) {
        // Create a list of her3
        
        
        Scanner sc = new Scanner(System.in);
        howtoplay toplay = new howtoplay();
        
        
        
        
        
        System.out.println("        --------DOTA 3--------\n\n");
        
    
        System.out.println("1) Find Match(COMING SOON)");
        System.out.println("2) PLAY DOTA");
        System.out.println("3) How to Play");
        System.out.println("4) Quit Game");
        System.out.print("Here: ");
        int choice=sc.nextInt();
        
        if(choice==3){
        toplay.display();
        }
        if(choice==2){
            List<Game> heroes = new ArrayList<>();
        heroes.add(new Warrior("Phantom Assassin", 100));
        heroes.add(new Warrior("Omniknight", 100));
        heroes.add(new Warrior("Hero3", 100));
        heroes.add(new Warrior("Hero4", 100));
        heroes.add(new Warrior("Hero5", 100));

        // Display the list of heroes for the user to pick
        System.out.println("Choose a hero by entering the hero's name:");
        for (Game hero : heroes) {
            System.out.println(hero.getName());
        }

        // Get the user's hero choice
        System.out.println("Enter here: ");
        sc.nextLine();
        String heroChoice = sc.nextLine();

        // Find the selected hero from the list
        Game selectedHero = findHero(heroes, heroChoice);

        // Choose difficulty level: "easy", "medium", or "hard"
        System.out.println("Choose difficulty: ");
        String difficulty = sc.nextLine();

        TurnGame game = new TurnGame(selectedHero, difficulty);
        game.playGame();
    }
    }
    private static Game findHero(List<Game> heroes, String heroName) {
        for (Game hero : heroes) {
            if (hero.getName().equalsIgnoreCase(heroName)) {
                return hero;
            }
        }
        throw new IllegalArgumentException("Invalid hero choice");
    }
}
      
        
